{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\shop-app\\\\src\\\\components\\\\image-results\\\\imageResults.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nclass ImageResults extends Component {\n  render() {\n    let imageListContent;\n    const {\n      images\n    } = this.props;\n\n    if (images) {\n      imageListContent = /*#__PURE__*/React.createElement(GridList, {\n        cols: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, images.map(img => /*#__PURE__*/React.createElement(GridTile, {\n        title: img.tags,\n        key: img.id,\n        subtitle: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }\n        }, \"by\", /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }\n        }, img.user)),\n        actionIcon: /*#__PURE__*/React.createElement(IconButton, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(ZoomIn, {\n          color: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: img.largeImageURL,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }))));\n    } else {\n      imageListContent = null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, imageListContent);\n  }\n\n}\n\nimageResults.propTypes = {\n  images: PropTypes.array.isRequired\n};\nexport default ImageResults;","map":{"version":3,"sources":["C:/Users/DELL/shop-app/src/components/image-results/imageResults.js"],"names":["React","Component","PropTypes","GridList","GridTile","IconButton","ZoomIn","Dialog","FlatButton","ImageResults","render","imageListContent","images","props","map","img","tags","id","user","largeImageURL","imageResults","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,EAAiBC,QAAjB,QAAgC,sBAAhC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAGC,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AAClCS,EAAAA,MAAM,GAAG;AACN,QAAIC,gBAAJ;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,KAAKC,KAApB;;AAEP,QAAGD,MAAH,EAAW;AACTD,MAAAA,gBAAgB,gBACZ,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,MAAM,CAACE,GAAP,CAAWC,GAAG,iBACb,oBAAC,QAAD;AACA,QAAA,KAAK,EAAEA,GAAG,CAACC,IADX;AAEA,QAAA,GAAG,EAAED,GAAG,CAACE,EAFT;AAGA,QAAA,QAAQ,eACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASF,GAAG,CAACG,IAAb,CAFA,CAJJ;AAUA,QAAA,UAAU,eACN,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAgBA;AAAK,QAAA,GAAG,EAAEH,GAAG,CAACI,aAAd;AAA8B,QAAA,GAAG,EAAC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBA,CADD,CADL,CADJ;AA2BD,KA5BD,MA6BI;AACAR,MAAAA,gBAAgB,GAAC,IAAjB;AACH;;AAGO,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,gBADL,CADJ;AAKH;;AA5CiC;;AAgDtCS,YAAY,CAACC,SAAb,GAAuB;AACnBT,EAAAA,MAAM,EAACV,SAAS,CAACoB,KAAV,CAAgBC;AADJ,CAAvB;AAIA,eAAed,YAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {GridList,GridTile} from 'material-ui/GridList';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton';\r\n\r\n\r\n class ImageResults extends Component {\r\n    render() {\r\n       let imageListContent;\r\n       const {images}=this.props\r\n\r\nif(images) {\r\n  imageListContent=(\r\n      <GridList cols={3}>\r\n          {images.map(img=>(\r\n            <GridTile\r\n            title={img.tags}\r\n            key={img.id}\r\n            subtitle={\r\n                <span>\r\n\r\n              by<strong>{img.user}</strong>\r\n\r\n                </span>\r\n            }\r\n            actionIcon={\r\n                <IconButton>\r\n                <ZoomIn color=\"white\" />\r\n                </IconButton>\r\n            }\r\n            >\r\n            <img src={img.largeImageURL}  alt=\"\" />\r\n            \r\n            </GridTile>\r\n            \r\n          ))}\r\n      \r\n      </GridList>\r\n  )\r\n}\r\nelse{\r\n    imageListContent=null;\r\n}\r\n\r\n\r\n        return (\r\n            <div>\r\n                {imageListContent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nimageResults.propTypes={\r\n    images:PropTypes.array.isRequired\r\n}\r\n\r\nexport default ImageResults;\r\n"]},"metadata":{},"sourceType":"module"}