{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\shop-app\\\\src\\\\components\\\\image-results\\\\imageResults.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nclass ImageResults extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      currentImg: ''\n    };\n\n    this.handleOpen = img => {\n      this.setState({\n        open: true,\n        currentImg: img\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    let imageListContent;\n    const {\n      images\n    } = this.props;\n\n    if (images) {\n      imageListContent = /*#__PURE__*/React.createElement(GridList, {\n        cols: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, images.map(img => /*#__PURE__*/React.createElement(GridTile, {\n        title: img.tags,\n        key: img.id,\n        actionIcon: /*#__PURE__*/React.createElement(IconButton, {\n          onClick: () => this.handleOpen(img.largeImageURL),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(ZoomIn, {\n          color: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: img.largeImageURL,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }))));\n    } else {\n      imageListContent = null;\n    }\n\n    const actions = [/*#__PURE__*/React.createElement(FlatButton, {\n      label: \"Close\",\n      primary: true,\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    })];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: 50,\n        marginRight: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, imageListContent, /*#__PURE__*/React.createElement(Dialog, {\n      actions: actions,\n      modal: false,\n      open: this.state.open,\n      onRequestClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.currentImg,\n      alt: \"\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }\n    })));\n  }\n\n}\n\nImageResults.propTypes = {\n  images: PropTypes.array.isRequired\n};\nexport default ImageResults;","map":{"version":3,"sources":["C:/Users/DELL/shop-app/src/components/image-results/imageResults.js"],"names":["React","Component","PropTypes","GridList","GridTile","IconButton","ZoomIn","Dialog","FlatButton","ImageResults","state","open","currentImg","handleOpen","img","setState","handleClose","render","imageListContent","images","props","map","tags","id","largeImageURL","actions","marginLeft","marginRight","width","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {GridList,GridTile} from 'material-ui/GridList';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in'\r\nimport Dialog from 'material-ui/Dialog'\r\nimport FlatButton from 'material-ui/FlatButton';\r\n\r\n\r\n class ImageResults extends Component {\r\n\r\n\r\nstate={\r\n    open:false,\r\n    currentImg:''\r\n}\r\n\r\n\r\nhandleOpen = img => {\r\n    this.setState({ open: true, currentImg: img });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n    render() {\r\n       let imageListContent;\r\n       const {images}=this.props\r\n\r\nif(images) {\r\n  imageListContent=(\r\n      <GridList cols={4}>\r\n          {images.map(img=>(\r\n            <GridTile\r\n            title={img.tags}\r\n            key={img.id}\r\n           \r\n            actionIcon={\r\n                <IconButton  onClick={() => this.handleOpen(img.largeImageURL)} >\r\n                <ZoomIn color=\"white\" />\r\n                </IconButton>\r\n            }\r\n            >\r\n            <img src={img.largeImageURL}  alt=\"\" />\r\n            \r\n            </GridTile>\r\n            \r\n          ))}\r\n      \r\n      </GridList>\r\n  )\r\n}\r\nelse{\r\n    imageListContent=null;\r\n}\r\n\r\nconst actions=[\r\n    <FlatButton label=\"Close\" primary={true} onClick={this.handleClose} />\r\n]\r\n\r\n        return (\r\n            <div style={{marginLeft:50,marginRight:50}}>\r\n                {imageListContent}\r\n                <Dialog\r\n                  \r\n                actions={actions}\r\n                modal={false}\r\n                open={this.state.open}\r\n                onRequestClose={this.handleClose}>\r\n               <img src={this.state.currentImg}  alt=\"\" style={{width:'100%'}} />\r\n                 \r\n                 </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nImageResults.propTypes={\r\n    images:PropTypes.array.isRequired\r\n}\r\n\r\nexport default ImageResults;\r\n"]},"metadata":{},"sourceType":"module"}