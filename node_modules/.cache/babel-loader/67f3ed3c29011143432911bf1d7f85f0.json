{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\shop-app\\\\src\\\\Index1.js\";\nimport React, { useState } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\nimport { getBasketTotal } from './reducer';\nimport CurrencyFormat from 'react-currency-format';\nimport { useStateValue } from './StateProvider';\nimport { toast } from 'react-toastify';\nimport './Index1.css';\ntoast.configure();\n\nfunction Index1() {\n  const [{\n    basket\n  }, dispatch] = useStateValue();\n\n  async function handleToken(token, addresses) {\n    // console.log({token,addresses})\n    const response = await axios.post('/checkout1', {\n      token,\n      basket\n    });\n    const {\n      status\n    } = response.data;\n\n    if (status == 'success') {\n      toast('Success! Check email for details', {\n        type: 'success'\n      });\n    } else {\n      toast('Something went wrong', {\n        type: 'error'\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyFormat, {\n    renderText: value => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    }, \"Subtotal (\", basket.length, \" items:\", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 51\n      }\n    }, `${value}`), \")\")),\n    decimalScale: 2,\n    value: getBasketTotal(basket),\n    displayType: \"text\",\n    thousandSeparator: true,\n    prefix: \"$\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(StripeCheckout, {\n    stripeKey: \"pk_test_51HXr9JCbnsbZ6VdUBG2At7u7YPv63RXeiwQCd4xrX5A0YwsL85I4Ya0oLNpAslGMk4HKp5zWbrW35qNuNsF1j0ke00CIxmd1vR\",\n    token: handleToken,\n    billingAddress: true,\n    shippingAddress: true,\n    amount: getBasketTotal(basket) * 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Index1;","map":{"version":3,"sources":["C:/Users/DELL/shop-app/src/Index1.js"],"names":["React","useState","StripeCheckout","axios","getBasketTotal","CurrencyFormat","useStateValue","toast","configure","Index1","basket","dispatch","handleToken","token","addresses","response","post","status","data","type","value","length"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,OAAO,cAAP;AACAA,KAAK,CAACC,SAAN;;AAGA,SAASC,MAAT,GAAkB;AACd,QAAM,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAUC,QAAV,IAAoBL,aAAa,EAAvC;;AAED,iBAAeM,WAAf,CAA2BC,KAA3B,EAAiCC,SAAjC,EAA2C;AACpC;AACF,UAAMC,QAAQ,GAAE,MAAMZ,KAAK,CAACa,IAAN,CAAW,YAAX,EAAwB;AACxCH,MAAAA,KADwC;AAExCH,MAAAA;AAFwC,KAAxB,CAAtB;AAIA,UAAM;AAACO,MAAAA;AAAD,QAAWF,QAAQ,CAACG,IAA1B;;AAEA,QAAGD,MAAM,IAAE,SAAX,EAAqB;AACjBV,MAAAA,KAAK,CAAC,kCAAD,EACF;AAACY,QAAAA,IAAI,EAAC;AAAN,OADE,CAAL;AAGH,KAJD,MAKA;AACIZ,MAAAA,KAAK,CAAC,sBAAD,EACF;AAACY,QAAAA,IAAI,EAAC;AAAN,OADE,CAAL;AAGH;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,cAAD;AACA,IAAA,UAAU,EAAGC,KAAD,iBACT,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACcV,MAAM,CAACW,MADrB,0BACmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAU,GAAED,KAAM,EAAlB,CADnC,MADJ,CAFH;AAUL,IAAA,YAAY,EAAE,CAVT;AAWL,IAAA,KAAK,EAAEhB,cAAc,CAACM,MAAD,CAXhB;AAYL,IAAA,WAAW,EAAE,MAZR;AAaL,IAAA,iBAAiB,EAAE,IAbd;AAcL,IAAA,MAAM,EAAE,GAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAmBI,oBAAC,cAAD;AACA,IAAA,SAAS,EAAC,6GADV;AAEA,IAAA,KAAK,EAAEE,WAFP;AAGA,IAAA,cAAc,MAHd;AAIA,IAAA,eAAe,MAJf;AAKA,IAAA,MAAM,EAAER,cAAc,CAACM,MAAD,CAAd,GAAuB,GAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,CADJ;AA+BH;;AAED,eAAeD,MAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport StripeCheckout from 'react-stripe-checkout'\r\nimport axios from 'axios'\r\nimport {getBasketTotal} from './reducer'\r\nimport CurrencyFormat from 'react-currency-format'\r\nimport { useStateValue } from './StateProvider'\r\nimport {toast} from 'react-toastify'\r\nimport './Index1.css'\r\ntoast.configure();\r\n\r\n\r\nfunction Index1() {\r\n    const [{basket},dispatch]=useStateValue();\r\n \r\n   async function handleToken(token,addresses){\r\n          // console.log({token,addresses})\r\n        const response= await axios.post('/checkout1',{\r\n              token,\r\n              basket\r\n          });\r\n        const {status} = response.data\r\n\r\n        if(status=='success'){\r\n            toast('Success! Check email for details',\r\n               {type:'success'}\r\n            )\r\n        }else\r\n        {\r\n            toast('Something went wrong',\r\n               {type:'error'}\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"d\">\r\n         \r\n        <CurrencyFormat \r\n        renderText={(value)=>(\r\n           <>\r\n               <p>\r\n                  Subtotal ({basket.length} items:<strong>{`${value}`}</strong>)\r\n               </p>\r\n              \r\n           </>\r\n\r\n        )}\r\n   decimalScale={2}\r\n   value={getBasketTotal(basket)}\r\n   displayType={\"text\"}\r\n   thousandSeparator={true}\r\n   prefix={\"$\"}\r\n\r\n/>\r\n            <StripeCheckout\r\n            stripeKey=\"pk_test_51HXr9JCbnsbZ6VdUBG2At7u7YPv63RXeiwQCd4xrX5A0YwsL85I4Ya0oLNpAslGMk4HKp5zWbrW35qNuNsF1j0ke00CIxmd1vR\"\r\n            token={handleToken}\r\n            billingAddress\r\n            shippingAddress\r\n            amount={getBasketTotal(basket)*100}\r\n         \r\n            />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Index1\r\n"]},"metadata":{},"sourceType":"module"}